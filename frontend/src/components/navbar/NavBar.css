.nav-bar {
  list-style-type: none;
  margin: 0;
  padding: 0;
  border-bottom: solid 2px;
  border-radius: 5px;
  overflow: hidden;
  display: flex;
  justify-content: space-between;
  align-items: center;
  border-color: #14adffab;
  background-color: #161616;

}

.nav-left {
  display: flex;
  align-items: center;
  gap: 20px;
}

.nav-right {
  display: flex;
  align-items: center;
  gap: 15px;
}

.nav-item {
  display: inline-block;
}

.pull-left {
  margin: 10px;
  font-size: 20px;
}


/* Fixed snake animation */
.home-button a {
  --c: #1e83ba; /* stroke color */
  --t: 5px; /* thickness */
  --l: 20px; /* corner length */

  display: inline-block;
  padding: 0.75rem 1.25rem;
  color: #fff;
  text-decoration: none;
  position: relative;

  /* Strategy: Use lines that grow FROM the corner positions to consume them */
  background:
                /* (1) LEFT line – grows down from top-left, consuming TL corner */ linear-gradient(
        var(--c) 0 0
      )
      left top / var(--t) 0 no-repeat,
    /* (2) BOTTOM line – grows right from bottom-left, consuming BR corner */
      linear-gradient(var(--c) 0 0) left bottom / 0 var(--t) no-repeat,
    /* (3) RIGHT line at bottom – grows left from bottom-right, gets consumed by bottom line */
      linear-gradient(var(--c) 0 0) right bottom / 0 var(--t) no-repeat,
    /* (4)(5) TL corner - will be covered by left line */
      linear-gradient(var(--c) 0 0) top left / var(--t) var(--l) no-repeat,
    linear-gradient(var(--c) 0 0) top left / var(--l) var(--t) no-repeat,
    /* (6)(7) BR corner - will be covered by right line then bottom line */
      linear-gradient(var(--c) 0 0) bottom right / var(--t) var(--l) no-repeat,
    linear-gradient(var(--c) 0 0) bottom right / var(--l) var(--t) no-repeat;
}

/* start the blink after the snake finishes */
.home-button a:hover{
  
  background-color: rgba(207, 207, 207, 0.057);
  --c: rgba(255, 255, 255, 0.9);
  animation:
    snake 0.6s ease forwards,
    underline-blink .6s steps(1, end) 0.6s infinite; /* delay = snake duration */
}

/* blink JUST the bottom underline (2nd layer) */
@keyframes underline-blink {
  /* layer order must match your .home-button a background: 
     [1] left line, [2] bottom line, [3] right-bottom line, [4][5] TL, [6][7] BR */
  0%,50% {
    background-size:
      var(--t) 0,            /* 1: left line collapsed */
      100% var(--t),         /* 2: underline visible */
      0 var(--t),            /* 3: right-bottom line collapsed */
      0 0, 0 0,              /* 4–5: TL corners hidden */
      0 0, 0 0;              /* 6–7: BR corners hidden */
  }
  51%,100% {
    background-size:
      var(--t) 0,            /* 1 */
      0 var(--t),            /* 2: underline hidden */
      0 var(--t),            /* 3 */
      0 0, 0 0,              /* 4–5 */
      0 0, 0 0;              /* 6–7 */
  }
}
/* PERFECT FLOW - left line transitions smoothly into bottom line:
           0%   corners only visible
           50%  left line grows down, right line grows left, corners consumed
           75%  left line reaches bottom and starts becoming bottom line
           90%  lines meet in the middle perfectly
           100% only bottom underline remains
        */
@keyframes snake {
  0% {
    background-size: var(--t) 0, /* left line height */ 0 var(--t),
      /* bottom line width (from left) */ 0 var(--t),
      /* right line width (from right) */ var(--t) var(--l), var(--l) var(--t),
      /* TL corner visible */ var(--t) var(--l), var(--l) var(--t); /* BR corner visible */
  }

  /* Both lines start growing - left down, right left */
  25% {
    background-size: var(--t) 30%, /* left line growing down */ 0 var(--t),
      /* bottom line still collapsed */ 15% var(--t),
      /* right line growing left */ var(--t) calc(var(--l) * 0.7),
      var(--l) var(--t), /* TL corner shrinking */ var(--t) calc(var(--l) * 0.8),
      var(--l) calc(var(--t) * 0.8); /* BR corner shrinking */
  }

  /* Left reaches bottom, right continues left, corners consumed */
  50% {
    background-size: var(--t) 100%, /* left line at full height */ 0 var(--t),
      /* bottom line still collapsed */ 35% var(--t),
      /* right line halfway */ 0 0, 0 0, /* TL corner consumed */ 0 0, 0 0; /* BR corner consumed */
  }

  /* SMOOTH TRANSITION: left line stays up while bottom line grows from its position */
  75% {
    background-size: var(--t) 100%, /* left line still fully up */ 25% var(--t),
      /* bottom line growing from left edge */ 50% var(--t),
      /* right line approaching center */ 0 0, 0 0, /* no corners */ 0 0, 0 0; /* no corners */
  }

  /* Lines meet in middle - left line still connecting smoothly */
  90% {
    background-size: var(--t) 100%,
      /* left line STILL up, maintaining connection */ 50% var(--t),
      /* bottom line at middle */ 50% var(--t),
      /* right line at middle - MEET! */ 0 0, 0 0, /* no corners */ 0 0, 0 0; /* no corners */
  }

  /* Final state: left line gradually shrinks as bottom line completes */
  100% {
    background-size: var(--t) 0,
      /* NOW left line gently collapses */ 100% var(--t),
      /* bottom line complete */ 0 var(--t), /* right line collapses */ 0 0, 0 0,
      /* no corners */ 0 0, 0 0; /* no corners */
  }
}
/* Premium User Card Styling */
.user-card {
  display: flex;
  margin-right: 10px;
  align-items: center;
  background: linear-gradient(135deg, #1a1a1a 0%, #2d2d2d 100%);
  border: 2px solid transparent;
  background-clip: padding-box;
  border-radius: 12px;
  padding: 12px 16px;
  max-width: 320px;
  gap: 12px;
  position: relative;
  overflow: hidden;
  transition: all 0.3s cubic-bezier(0.4, 0, 0.2, 1);
  box-shadow: 
    0 4px 20px rgba(0, 0, 0, 0.3),
    inset 0 1px 0 rgba(255, 255, 255, 0.1);
}

/* Animated border gradient */
.user-card::before {
  content: '';
  position: absolute;
  inset: 0;
  padding: 2px;
  background: linear-gradient(45deg, #14adff, #1e83ba, #14adff, #00d4ff);
  border-radius: inherit;
  mask: linear-gradient(#fff 0 0) content-box, linear-gradient(#fff 0 0);
  mask-composite: xor;
  -webkit-mask-composite: xor;
  background-size: 300% 300%;
  animation: borderGlow 3s ease-in-out infinite;
  opacity: 0.8;
}

/* Subtle glow effect on hover */
.user-card::after {
  content: '';
  position: absolute;
  top: 50%;
  left: 50%;
  width: 100%;
  height: 100%;
  transform: translate(-50%, -50%) scale(0);
  border-radius: inherit;
  transition: transform 0.6s cubic-bezier(0.4, 0, 0.2, 1);
  pointer-events: none;
  z-index: -1;
}

.user-card:hover::after {
  transform: translate(-50%, -50%) scale(1.2);
}

.user-card:hover {
transform: translateY(-2px);

}

@keyframes borderGlow {
  0%, 100% { background-position: 0% 50%; }
  50% { background-position: 100% 50%; }
}

.user-info {
  flex: 1;
  display: flex;
  flex-direction: column;
  gap: 6px;
  z-index: 2;
}

.user-info .user-name {
  color: #ffffff;
  font-size: 17px;
  font-weight: 700;
  margin: 0;
  text-shadow: 0 1px 2px rgba(0, 0, 0, 0.5);
  letter-spacing: 0.3px;
}

.user-stats {
  color: #b0b0b0;
  font-size: 13px;
  margin: 0;
  font-weight: 500;
  display: flex;
  flex-direction: column;
  gap: 2px;
}

.user-stats span {
  display: flex;
  align-items: center;
  gap: 6px;
}

.user-stats span::before {
  content: '';
  width: 4px;
  height: 4px;
  background: #14adff;
  border-radius: 50%;
  box-shadow: 0 0 6px rgba(20, 173, 255, 0.6);
}

.user-card img {
  width: 64px;
  height: 64px;
  border-radius: 12px;
  object-fit: cover;
  border: 2px solid rgba(20, 173, 255, 0.3);
  transition: all 0.3s ease;
  box-shadow: 
    0 4px 12px rgba(0, 0, 0, 0.3),
    inset 0 1px 0 rgba(255, 255, 255, 0.1);
  z-index: 2;
  position: relative;
}

.user-card:hover img {
  border-color: rgba(20, 173, 255, 0.6);
  box-shadow: 
    0 6px 20px rgba(0, 0, 0, 0.4),
    0 0 20px rgba(20, 173, 255, 0.2),
    inset 0 1px 0 rgba(255, 255, 255, 0.15);
  transform: scale(1.05);
}

.logout-btn {
  background: linear-gradient(135deg, #2a2a2a 0%, #404040 100%);
  border: 1px solid rgba(20, 173, 255, 0.3);
  color: #ffffff;
  padding: 8px 14px;
  border-radius: 8px;
  cursor: pointer;
  font-size: 12px;
  font-weight: 600;
  transition: all 0.3s cubic-bezier(0.4, 0, 0.2, 1);
  text-transform: uppercase;
  letter-spacing: 0.5px;
  box-shadow: 
    0 2px 8px rgba(0, 0, 0, 0.2),
    inset 0 1px 0 rgba(255, 255, 255, 0.1);
  z-index: 2;
  position: relative;
}

.logout-btn:hover {
  background: linear-gradient(135deg, #14adff 0%, #1e83ba 100%);
  border-color: rgba(255, 255, 255, 0.2);
  transform: translateY(-1px);
  box-shadow: 
    0 4px 12px rgba(20, 173, 255, 0.3),
    0 2px 8px rgba(0, 0, 0, 0.3),
    inset 0 1px 0 rgba(255, 255, 255, 0.2);
}

.logout-btn:active {
  transform: translateY(0px);
}

/* Enhanced responsiveness */
@media (max-width: 768px) {
  .user-card {
    max-width: 280px;
    padding: 10px 14px;
  }
  
  .user-card img {
    width: 56px;
    height: 56px;
  }
  
  .user-info .user-name {
    font-size: 16px;
  }
  
  .user-stats {
    font-size: 12px;
  }
}
/* Auth links styling */
.auth-links {
  display: flex;
  gap: 15px;
  margin-right: 10px;
}

.auth-links a {
  color: #f6f6f6;
  text-decoration: none;
  padding: 8px 16px;
  border: 1px solid #f6f6f6;
  border-radius: 4px;
  transition: all 0.3s ease;
}

.auth-links a:hover {
  background: rgba(255, 255, 255, 0.1);
  transform: translateY(-1px);
}
